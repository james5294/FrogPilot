#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_631819449712510397) {
   out_631819449712510397[0] = 0;
   out_631819449712510397[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_631819449712510397[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_631819449712510397[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_631819449712510397[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_631819449712510397[5] = -sin(in_vec[1]);
   out_631819449712510397[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_631819449712510397[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_631819449712510397[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_631819449712510397[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_631819449712510397[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_631819449712510397[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_631819449712510397[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_631819449712510397[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_631819449712510397[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_631819449712510397[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_631819449712510397[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_631819449712510397[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3878424390323155735) {
   out_3878424390323155735[0] = delta_x[0] + nom_x[0];
   out_3878424390323155735[1] = delta_x[1] + nom_x[1];
   out_3878424390323155735[2] = delta_x[2] + nom_x[2];
   out_3878424390323155735[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3878424390323155735[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3878424390323155735[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3878424390323155735[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3878424390323155735[7] = delta_x[6] + nom_x[7];
   out_3878424390323155735[8] = delta_x[7] + nom_x[8];
   out_3878424390323155735[9] = delta_x[8] + nom_x[9];
   out_3878424390323155735[10] = delta_x[9] + nom_x[10];
   out_3878424390323155735[11] = delta_x[10] + nom_x[11];
   out_3878424390323155735[12] = delta_x[11] + nom_x[12];
   out_3878424390323155735[13] = delta_x[12] + nom_x[13];
   out_3878424390323155735[14] = delta_x[13] + nom_x[14];
   out_3878424390323155735[15] = delta_x[14] + nom_x[15];
   out_3878424390323155735[16] = delta_x[15] + nom_x[16];
   out_3878424390323155735[17] = delta_x[16] + nom_x[17];
   out_3878424390323155735[18] = delta_x[17] + nom_x[18];
   out_3878424390323155735[19] = delta_x[18] + nom_x[19];
   out_3878424390323155735[20] = delta_x[19] + nom_x[20];
   out_3878424390323155735[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4179741375102109110) {
   out_4179741375102109110[0] = -nom_x[0] + true_x[0];
   out_4179741375102109110[1] = -nom_x[1] + true_x[1];
   out_4179741375102109110[2] = -nom_x[2] + true_x[2];
   out_4179741375102109110[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4179741375102109110[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4179741375102109110[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4179741375102109110[6] = -nom_x[7] + true_x[7];
   out_4179741375102109110[7] = -nom_x[8] + true_x[8];
   out_4179741375102109110[8] = -nom_x[9] + true_x[9];
   out_4179741375102109110[9] = -nom_x[10] + true_x[10];
   out_4179741375102109110[10] = -nom_x[11] + true_x[11];
   out_4179741375102109110[11] = -nom_x[12] + true_x[12];
   out_4179741375102109110[12] = -nom_x[13] + true_x[13];
   out_4179741375102109110[13] = -nom_x[14] + true_x[14];
   out_4179741375102109110[14] = -nom_x[15] + true_x[15];
   out_4179741375102109110[15] = -nom_x[16] + true_x[16];
   out_4179741375102109110[16] = -nom_x[17] + true_x[17];
   out_4179741375102109110[17] = -nom_x[18] + true_x[18];
   out_4179741375102109110[18] = -nom_x[19] + true_x[19];
   out_4179741375102109110[19] = -nom_x[20] + true_x[20];
   out_4179741375102109110[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3391345618074547058) {
   out_3391345618074547058[0] = 1.0;
   out_3391345618074547058[1] = 0;
   out_3391345618074547058[2] = 0;
   out_3391345618074547058[3] = 0;
   out_3391345618074547058[4] = 0;
   out_3391345618074547058[5] = 0;
   out_3391345618074547058[6] = 0;
   out_3391345618074547058[7] = 0;
   out_3391345618074547058[8] = 0;
   out_3391345618074547058[9] = 0;
   out_3391345618074547058[10] = 0;
   out_3391345618074547058[11] = 0;
   out_3391345618074547058[12] = 0;
   out_3391345618074547058[13] = 0;
   out_3391345618074547058[14] = 0;
   out_3391345618074547058[15] = 0;
   out_3391345618074547058[16] = 0;
   out_3391345618074547058[17] = 0;
   out_3391345618074547058[18] = 0;
   out_3391345618074547058[19] = 0;
   out_3391345618074547058[20] = 0;
   out_3391345618074547058[21] = 0;
   out_3391345618074547058[22] = 1.0;
   out_3391345618074547058[23] = 0;
   out_3391345618074547058[24] = 0;
   out_3391345618074547058[25] = 0;
   out_3391345618074547058[26] = 0;
   out_3391345618074547058[27] = 0;
   out_3391345618074547058[28] = 0;
   out_3391345618074547058[29] = 0;
   out_3391345618074547058[30] = 0;
   out_3391345618074547058[31] = 0;
   out_3391345618074547058[32] = 0;
   out_3391345618074547058[33] = 0;
   out_3391345618074547058[34] = 0;
   out_3391345618074547058[35] = 0;
   out_3391345618074547058[36] = 0;
   out_3391345618074547058[37] = 0;
   out_3391345618074547058[38] = 0;
   out_3391345618074547058[39] = 0;
   out_3391345618074547058[40] = 0;
   out_3391345618074547058[41] = 0;
   out_3391345618074547058[42] = 0;
   out_3391345618074547058[43] = 0;
   out_3391345618074547058[44] = 1.0;
   out_3391345618074547058[45] = 0;
   out_3391345618074547058[46] = 0;
   out_3391345618074547058[47] = 0;
   out_3391345618074547058[48] = 0;
   out_3391345618074547058[49] = 0;
   out_3391345618074547058[50] = 0;
   out_3391345618074547058[51] = 0;
   out_3391345618074547058[52] = 0;
   out_3391345618074547058[53] = 0;
   out_3391345618074547058[54] = 0;
   out_3391345618074547058[55] = 0;
   out_3391345618074547058[56] = 0;
   out_3391345618074547058[57] = 0;
   out_3391345618074547058[58] = 0;
   out_3391345618074547058[59] = 0;
   out_3391345618074547058[60] = 0;
   out_3391345618074547058[61] = 0;
   out_3391345618074547058[62] = 0;
   out_3391345618074547058[63] = 0;
   out_3391345618074547058[64] = 0;
   out_3391345618074547058[65] = 0;
   out_3391345618074547058[66] = -0.5*state[4];
   out_3391345618074547058[67] = -0.5*state[5];
   out_3391345618074547058[68] = -0.5*state[6];
   out_3391345618074547058[69] = 0;
   out_3391345618074547058[70] = 0;
   out_3391345618074547058[71] = 0;
   out_3391345618074547058[72] = 0;
   out_3391345618074547058[73] = 0;
   out_3391345618074547058[74] = 0;
   out_3391345618074547058[75] = 0;
   out_3391345618074547058[76] = 0;
   out_3391345618074547058[77] = 0;
   out_3391345618074547058[78] = 0;
   out_3391345618074547058[79] = 0;
   out_3391345618074547058[80] = 0;
   out_3391345618074547058[81] = 0;
   out_3391345618074547058[82] = 0;
   out_3391345618074547058[83] = 0;
   out_3391345618074547058[84] = 0;
   out_3391345618074547058[85] = 0;
   out_3391345618074547058[86] = 0;
   out_3391345618074547058[87] = 0.5*state[3];
   out_3391345618074547058[88] = 0.5*state[6];
   out_3391345618074547058[89] = -0.5*state[5];
   out_3391345618074547058[90] = 0;
   out_3391345618074547058[91] = 0;
   out_3391345618074547058[92] = 0;
   out_3391345618074547058[93] = 0;
   out_3391345618074547058[94] = 0;
   out_3391345618074547058[95] = 0;
   out_3391345618074547058[96] = 0;
   out_3391345618074547058[97] = 0;
   out_3391345618074547058[98] = 0;
   out_3391345618074547058[99] = 0;
   out_3391345618074547058[100] = 0;
   out_3391345618074547058[101] = 0;
   out_3391345618074547058[102] = 0;
   out_3391345618074547058[103] = 0;
   out_3391345618074547058[104] = 0;
   out_3391345618074547058[105] = 0;
   out_3391345618074547058[106] = 0;
   out_3391345618074547058[107] = 0;
   out_3391345618074547058[108] = -0.5*state[6];
   out_3391345618074547058[109] = 0.5*state[3];
   out_3391345618074547058[110] = 0.5*state[4];
   out_3391345618074547058[111] = 0;
   out_3391345618074547058[112] = 0;
   out_3391345618074547058[113] = 0;
   out_3391345618074547058[114] = 0;
   out_3391345618074547058[115] = 0;
   out_3391345618074547058[116] = 0;
   out_3391345618074547058[117] = 0;
   out_3391345618074547058[118] = 0;
   out_3391345618074547058[119] = 0;
   out_3391345618074547058[120] = 0;
   out_3391345618074547058[121] = 0;
   out_3391345618074547058[122] = 0;
   out_3391345618074547058[123] = 0;
   out_3391345618074547058[124] = 0;
   out_3391345618074547058[125] = 0;
   out_3391345618074547058[126] = 0;
   out_3391345618074547058[127] = 0;
   out_3391345618074547058[128] = 0;
   out_3391345618074547058[129] = 0.5*state[5];
   out_3391345618074547058[130] = -0.5*state[4];
   out_3391345618074547058[131] = 0.5*state[3];
   out_3391345618074547058[132] = 0;
   out_3391345618074547058[133] = 0;
   out_3391345618074547058[134] = 0;
   out_3391345618074547058[135] = 0;
   out_3391345618074547058[136] = 0;
   out_3391345618074547058[137] = 0;
   out_3391345618074547058[138] = 0;
   out_3391345618074547058[139] = 0;
   out_3391345618074547058[140] = 0;
   out_3391345618074547058[141] = 0;
   out_3391345618074547058[142] = 0;
   out_3391345618074547058[143] = 0;
   out_3391345618074547058[144] = 0;
   out_3391345618074547058[145] = 0;
   out_3391345618074547058[146] = 0;
   out_3391345618074547058[147] = 0;
   out_3391345618074547058[148] = 0;
   out_3391345618074547058[149] = 0;
   out_3391345618074547058[150] = 0;
   out_3391345618074547058[151] = 0;
   out_3391345618074547058[152] = 0;
   out_3391345618074547058[153] = 1.0;
   out_3391345618074547058[154] = 0;
   out_3391345618074547058[155] = 0;
   out_3391345618074547058[156] = 0;
   out_3391345618074547058[157] = 0;
   out_3391345618074547058[158] = 0;
   out_3391345618074547058[159] = 0;
   out_3391345618074547058[160] = 0;
   out_3391345618074547058[161] = 0;
   out_3391345618074547058[162] = 0;
   out_3391345618074547058[163] = 0;
   out_3391345618074547058[164] = 0;
   out_3391345618074547058[165] = 0;
   out_3391345618074547058[166] = 0;
   out_3391345618074547058[167] = 0;
   out_3391345618074547058[168] = 0;
   out_3391345618074547058[169] = 0;
   out_3391345618074547058[170] = 0;
   out_3391345618074547058[171] = 0;
   out_3391345618074547058[172] = 0;
   out_3391345618074547058[173] = 0;
   out_3391345618074547058[174] = 0;
   out_3391345618074547058[175] = 1.0;
   out_3391345618074547058[176] = 0;
   out_3391345618074547058[177] = 0;
   out_3391345618074547058[178] = 0;
   out_3391345618074547058[179] = 0;
   out_3391345618074547058[180] = 0;
   out_3391345618074547058[181] = 0;
   out_3391345618074547058[182] = 0;
   out_3391345618074547058[183] = 0;
   out_3391345618074547058[184] = 0;
   out_3391345618074547058[185] = 0;
   out_3391345618074547058[186] = 0;
   out_3391345618074547058[187] = 0;
   out_3391345618074547058[188] = 0;
   out_3391345618074547058[189] = 0;
   out_3391345618074547058[190] = 0;
   out_3391345618074547058[191] = 0;
   out_3391345618074547058[192] = 0;
   out_3391345618074547058[193] = 0;
   out_3391345618074547058[194] = 0;
   out_3391345618074547058[195] = 0;
   out_3391345618074547058[196] = 0;
   out_3391345618074547058[197] = 1.0;
   out_3391345618074547058[198] = 0;
   out_3391345618074547058[199] = 0;
   out_3391345618074547058[200] = 0;
   out_3391345618074547058[201] = 0;
   out_3391345618074547058[202] = 0;
   out_3391345618074547058[203] = 0;
   out_3391345618074547058[204] = 0;
   out_3391345618074547058[205] = 0;
   out_3391345618074547058[206] = 0;
   out_3391345618074547058[207] = 0;
   out_3391345618074547058[208] = 0;
   out_3391345618074547058[209] = 0;
   out_3391345618074547058[210] = 0;
   out_3391345618074547058[211] = 0;
   out_3391345618074547058[212] = 0;
   out_3391345618074547058[213] = 0;
   out_3391345618074547058[214] = 0;
   out_3391345618074547058[215] = 0;
   out_3391345618074547058[216] = 0;
   out_3391345618074547058[217] = 0;
   out_3391345618074547058[218] = 0;
   out_3391345618074547058[219] = 1.0;
   out_3391345618074547058[220] = 0;
   out_3391345618074547058[221] = 0;
   out_3391345618074547058[222] = 0;
   out_3391345618074547058[223] = 0;
   out_3391345618074547058[224] = 0;
   out_3391345618074547058[225] = 0;
   out_3391345618074547058[226] = 0;
   out_3391345618074547058[227] = 0;
   out_3391345618074547058[228] = 0;
   out_3391345618074547058[229] = 0;
   out_3391345618074547058[230] = 0;
   out_3391345618074547058[231] = 0;
   out_3391345618074547058[232] = 0;
   out_3391345618074547058[233] = 0;
   out_3391345618074547058[234] = 0;
   out_3391345618074547058[235] = 0;
   out_3391345618074547058[236] = 0;
   out_3391345618074547058[237] = 0;
   out_3391345618074547058[238] = 0;
   out_3391345618074547058[239] = 0;
   out_3391345618074547058[240] = 0;
   out_3391345618074547058[241] = 1.0;
   out_3391345618074547058[242] = 0;
   out_3391345618074547058[243] = 0;
   out_3391345618074547058[244] = 0;
   out_3391345618074547058[245] = 0;
   out_3391345618074547058[246] = 0;
   out_3391345618074547058[247] = 0;
   out_3391345618074547058[248] = 0;
   out_3391345618074547058[249] = 0;
   out_3391345618074547058[250] = 0;
   out_3391345618074547058[251] = 0;
   out_3391345618074547058[252] = 0;
   out_3391345618074547058[253] = 0;
   out_3391345618074547058[254] = 0;
   out_3391345618074547058[255] = 0;
   out_3391345618074547058[256] = 0;
   out_3391345618074547058[257] = 0;
   out_3391345618074547058[258] = 0;
   out_3391345618074547058[259] = 0;
   out_3391345618074547058[260] = 0;
   out_3391345618074547058[261] = 0;
   out_3391345618074547058[262] = 0;
   out_3391345618074547058[263] = 1.0;
   out_3391345618074547058[264] = 0;
   out_3391345618074547058[265] = 0;
   out_3391345618074547058[266] = 0;
   out_3391345618074547058[267] = 0;
   out_3391345618074547058[268] = 0;
   out_3391345618074547058[269] = 0;
   out_3391345618074547058[270] = 0;
   out_3391345618074547058[271] = 0;
   out_3391345618074547058[272] = 0;
   out_3391345618074547058[273] = 0;
   out_3391345618074547058[274] = 0;
   out_3391345618074547058[275] = 0;
   out_3391345618074547058[276] = 0;
   out_3391345618074547058[277] = 0;
   out_3391345618074547058[278] = 0;
   out_3391345618074547058[279] = 0;
   out_3391345618074547058[280] = 0;
   out_3391345618074547058[281] = 0;
   out_3391345618074547058[282] = 0;
   out_3391345618074547058[283] = 0;
   out_3391345618074547058[284] = 0;
   out_3391345618074547058[285] = 1.0;
   out_3391345618074547058[286] = 0;
   out_3391345618074547058[287] = 0;
   out_3391345618074547058[288] = 0;
   out_3391345618074547058[289] = 0;
   out_3391345618074547058[290] = 0;
   out_3391345618074547058[291] = 0;
   out_3391345618074547058[292] = 0;
   out_3391345618074547058[293] = 0;
   out_3391345618074547058[294] = 0;
   out_3391345618074547058[295] = 0;
   out_3391345618074547058[296] = 0;
   out_3391345618074547058[297] = 0;
   out_3391345618074547058[298] = 0;
   out_3391345618074547058[299] = 0;
   out_3391345618074547058[300] = 0;
   out_3391345618074547058[301] = 0;
   out_3391345618074547058[302] = 0;
   out_3391345618074547058[303] = 0;
   out_3391345618074547058[304] = 0;
   out_3391345618074547058[305] = 0;
   out_3391345618074547058[306] = 0;
   out_3391345618074547058[307] = 1.0;
   out_3391345618074547058[308] = 0;
   out_3391345618074547058[309] = 0;
   out_3391345618074547058[310] = 0;
   out_3391345618074547058[311] = 0;
   out_3391345618074547058[312] = 0;
   out_3391345618074547058[313] = 0;
   out_3391345618074547058[314] = 0;
   out_3391345618074547058[315] = 0;
   out_3391345618074547058[316] = 0;
   out_3391345618074547058[317] = 0;
   out_3391345618074547058[318] = 0;
   out_3391345618074547058[319] = 0;
   out_3391345618074547058[320] = 0;
   out_3391345618074547058[321] = 0;
   out_3391345618074547058[322] = 0;
   out_3391345618074547058[323] = 0;
   out_3391345618074547058[324] = 0;
   out_3391345618074547058[325] = 0;
   out_3391345618074547058[326] = 0;
   out_3391345618074547058[327] = 0;
   out_3391345618074547058[328] = 0;
   out_3391345618074547058[329] = 1.0;
   out_3391345618074547058[330] = 0;
   out_3391345618074547058[331] = 0;
   out_3391345618074547058[332] = 0;
   out_3391345618074547058[333] = 0;
   out_3391345618074547058[334] = 0;
   out_3391345618074547058[335] = 0;
   out_3391345618074547058[336] = 0;
   out_3391345618074547058[337] = 0;
   out_3391345618074547058[338] = 0;
   out_3391345618074547058[339] = 0;
   out_3391345618074547058[340] = 0;
   out_3391345618074547058[341] = 0;
   out_3391345618074547058[342] = 0;
   out_3391345618074547058[343] = 0;
   out_3391345618074547058[344] = 0;
   out_3391345618074547058[345] = 0;
   out_3391345618074547058[346] = 0;
   out_3391345618074547058[347] = 0;
   out_3391345618074547058[348] = 0;
   out_3391345618074547058[349] = 0;
   out_3391345618074547058[350] = 0;
   out_3391345618074547058[351] = 1.0;
   out_3391345618074547058[352] = 0;
   out_3391345618074547058[353] = 0;
   out_3391345618074547058[354] = 0;
   out_3391345618074547058[355] = 0;
   out_3391345618074547058[356] = 0;
   out_3391345618074547058[357] = 0;
   out_3391345618074547058[358] = 0;
   out_3391345618074547058[359] = 0;
   out_3391345618074547058[360] = 0;
   out_3391345618074547058[361] = 0;
   out_3391345618074547058[362] = 0;
   out_3391345618074547058[363] = 0;
   out_3391345618074547058[364] = 0;
   out_3391345618074547058[365] = 0;
   out_3391345618074547058[366] = 0;
   out_3391345618074547058[367] = 0;
   out_3391345618074547058[368] = 0;
   out_3391345618074547058[369] = 0;
   out_3391345618074547058[370] = 0;
   out_3391345618074547058[371] = 0;
   out_3391345618074547058[372] = 0;
   out_3391345618074547058[373] = 1.0;
   out_3391345618074547058[374] = 0;
   out_3391345618074547058[375] = 0;
   out_3391345618074547058[376] = 0;
   out_3391345618074547058[377] = 0;
   out_3391345618074547058[378] = 0;
   out_3391345618074547058[379] = 0;
   out_3391345618074547058[380] = 0;
   out_3391345618074547058[381] = 0;
   out_3391345618074547058[382] = 0;
   out_3391345618074547058[383] = 0;
   out_3391345618074547058[384] = 0;
   out_3391345618074547058[385] = 0;
   out_3391345618074547058[386] = 0;
   out_3391345618074547058[387] = 0;
   out_3391345618074547058[388] = 0;
   out_3391345618074547058[389] = 0;
   out_3391345618074547058[390] = 0;
   out_3391345618074547058[391] = 0;
   out_3391345618074547058[392] = 0;
   out_3391345618074547058[393] = 0;
   out_3391345618074547058[394] = 0;
   out_3391345618074547058[395] = 1.0;
   out_3391345618074547058[396] = 0;
   out_3391345618074547058[397] = 0;
   out_3391345618074547058[398] = 0;
   out_3391345618074547058[399] = 0;
   out_3391345618074547058[400] = 0;
   out_3391345618074547058[401] = 0;
   out_3391345618074547058[402] = 0;
   out_3391345618074547058[403] = 0;
   out_3391345618074547058[404] = 0;
   out_3391345618074547058[405] = 0;
   out_3391345618074547058[406] = 0;
   out_3391345618074547058[407] = 0;
   out_3391345618074547058[408] = 0;
   out_3391345618074547058[409] = 0;
   out_3391345618074547058[410] = 0;
   out_3391345618074547058[411] = 0;
   out_3391345618074547058[412] = 0;
   out_3391345618074547058[413] = 0;
   out_3391345618074547058[414] = 0;
   out_3391345618074547058[415] = 0;
   out_3391345618074547058[416] = 0;
   out_3391345618074547058[417] = 1.0;
   out_3391345618074547058[418] = 0;
   out_3391345618074547058[419] = 0;
   out_3391345618074547058[420] = 0;
   out_3391345618074547058[421] = 0;
   out_3391345618074547058[422] = 0;
   out_3391345618074547058[423] = 0;
   out_3391345618074547058[424] = 0;
   out_3391345618074547058[425] = 0;
   out_3391345618074547058[426] = 0;
   out_3391345618074547058[427] = 0;
   out_3391345618074547058[428] = 0;
   out_3391345618074547058[429] = 0;
   out_3391345618074547058[430] = 0;
   out_3391345618074547058[431] = 0;
   out_3391345618074547058[432] = 0;
   out_3391345618074547058[433] = 0;
   out_3391345618074547058[434] = 0;
   out_3391345618074547058[435] = 0;
   out_3391345618074547058[436] = 0;
   out_3391345618074547058[437] = 0;
   out_3391345618074547058[438] = 0;
   out_3391345618074547058[439] = 1.0;
   out_3391345618074547058[440] = 0;
   out_3391345618074547058[441] = 0;
   out_3391345618074547058[442] = 0;
   out_3391345618074547058[443] = 0;
   out_3391345618074547058[444] = 0;
   out_3391345618074547058[445] = 0;
   out_3391345618074547058[446] = 0;
   out_3391345618074547058[447] = 0;
   out_3391345618074547058[448] = 0;
   out_3391345618074547058[449] = 0;
   out_3391345618074547058[450] = 0;
   out_3391345618074547058[451] = 0;
   out_3391345618074547058[452] = 0;
   out_3391345618074547058[453] = 0;
   out_3391345618074547058[454] = 0;
   out_3391345618074547058[455] = 0;
   out_3391345618074547058[456] = 0;
   out_3391345618074547058[457] = 0;
   out_3391345618074547058[458] = 0;
   out_3391345618074547058[459] = 0;
   out_3391345618074547058[460] = 0;
   out_3391345618074547058[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6911575211779932527) {
   out_6911575211779932527[0] = dt*state[7] + state[0];
   out_6911575211779932527[1] = dt*state[8] + state[1];
   out_6911575211779932527[2] = dt*state[9] + state[2];
   out_6911575211779932527[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6911575211779932527[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6911575211779932527[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6911575211779932527[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6911575211779932527[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6911575211779932527[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6911575211779932527[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6911575211779932527[10] = state[10];
   out_6911575211779932527[11] = state[11];
   out_6911575211779932527[12] = state[12];
   out_6911575211779932527[13] = state[13];
   out_6911575211779932527[14] = state[14];
   out_6911575211779932527[15] = state[15];
   out_6911575211779932527[16] = state[16];
   out_6911575211779932527[17] = state[17];
   out_6911575211779932527[18] = state[18];
   out_6911575211779932527[19] = state[19];
   out_6911575211779932527[20] = state[20];
   out_6911575211779932527[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4499894670452749778) {
   out_4499894670452749778[0] = 1;
   out_4499894670452749778[1] = 0;
   out_4499894670452749778[2] = 0;
   out_4499894670452749778[3] = 0;
   out_4499894670452749778[4] = 0;
   out_4499894670452749778[5] = 0;
   out_4499894670452749778[6] = dt;
   out_4499894670452749778[7] = 0;
   out_4499894670452749778[8] = 0;
   out_4499894670452749778[9] = 0;
   out_4499894670452749778[10] = 0;
   out_4499894670452749778[11] = 0;
   out_4499894670452749778[12] = 0;
   out_4499894670452749778[13] = 0;
   out_4499894670452749778[14] = 0;
   out_4499894670452749778[15] = 0;
   out_4499894670452749778[16] = 0;
   out_4499894670452749778[17] = 0;
   out_4499894670452749778[18] = 0;
   out_4499894670452749778[19] = 0;
   out_4499894670452749778[20] = 0;
   out_4499894670452749778[21] = 0;
   out_4499894670452749778[22] = 1;
   out_4499894670452749778[23] = 0;
   out_4499894670452749778[24] = 0;
   out_4499894670452749778[25] = 0;
   out_4499894670452749778[26] = 0;
   out_4499894670452749778[27] = 0;
   out_4499894670452749778[28] = dt;
   out_4499894670452749778[29] = 0;
   out_4499894670452749778[30] = 0;
   out_4499894670452749778[31] = 0;
   out_4499894670452749778[32] = 0;
   out_4499894670452749778[33] = 0;
   out_4499894670452749778[34] = 0;
   out_4499894670452749778[35] = 0;
   out_4499894670452749778[36] = 0;
   out_4499894670452749778[37] = 0;
   out_4499894670452749778[38] = 0;
   out_4499894670452749778[39] = 0;
   out_4499894670452749778[40] = 0;
   out_4499894670452749778[41] = 0;
   out_4499894670452749778[42] = 0;
   out_4499894670452749778[43] = 0;
   out_4499894670452749778[44] = 1;
   out_4499894670452749778[45] = 0;
   out_4499894670452749778[46] = 0;
   out_4499894670452749778[47] = 0;
   out_4499894670452749778[48] = 0;
   out_4499894670452749778[49] = 0;
   out_4499894670452749778[50] = dt;
   out_4499894670452749778[51] = 0;
   out_4499894670452749778[52] = 0;
   out_4499894670452749778[53] = 0;
   out_4499894670452749778[54] = 0;
   out_4499894670452749778[55] = 0;
   out_4499894670452749778[56] = 0;
   out_4499894670452749778[57] = 0;
   out_4499894670452749778[58] = 0;
   out_4499894670452749778[59] = 0;
   out_4499894670452749778[60] = 0;
   out_4499894670452749778[61] = 0;
   out_4499894670452749778[62] = 0;
   out_4499894670452749778[63] = 0;
   out_4499894670452749778[64] = 0;
   out_4499894670452749778[65] = 0;
   out_4499894670452749778[66] = 1;
   out_4499894670452749778[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4499894670452749778[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4499894670452749778[69] = 0;
   out_4499894670452749778[70] = 0;
   out_4499894670452749778[71] = 0;
   out_4499894670452749778[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4499894670452749778[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4499894670452749778[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4499894670452749778[75] = 0;
   out_4499894670452749778[76] = 0;
   out_4499894670452749778[77] = 0;
   out_4499894670452749778[78] = 0;
   out_4499894670452749778[79] = 0;
   out_4499894670452749778[80] = 0;
   out_4499894670452749778[81] = 0;
   out_4499894670452749778[82] = 0;
   out_4499894670452749778[83] = 0;
   out_4499894670452749778[84] = 0;
   out_4499894670452749778[85] = 0;
   out_4499894670452749778[86] = 0;
   out_4499894670452749778[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4499894670452749778[88] = 1;
   out_4499894670452749778[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4499894670452749778[90] = 0;
   out_4499894670452749778[91] = 0;
   out_4499894670452749778[92] = 0;
   out_4499894670452749778[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4499894670452749778[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4499894670452749778[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4499894670452749778[96] = 0;
   out_4499894670452749778[97] = 0;
   out_4499894670452749778[98] = 0;
   out_4499894670452749778[99] = 0;
   out_4499894670452749778[100] = 0;
   out_4499894670452749778[101] = 0;
   out_4499894670452749778[102] = 0;
   out_4499894670452749778[103] = 0;
   out_4499894670452749778[104] = 0;
   out_4499894670452749778[105] = 0;
   out_4499894670452749778[106] = 0;
   out_4499894670452749778[107] = 0;
   out_4499894670452749778[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4499894670452749778[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4499894670452749778[110] = 1;
   out_4499894670452749778[111] = 0;
   out_4499894670452749778[112] = 0;
   out_4499894670452749778[113] = 0;
   out_4499894670452749778[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4499894670452749778[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4499894670452749778[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4499894670452749778[117] = 0;
   out_4499894670452749778[118] = 0;
   out_4499894670452749778[119] = 0;
   out_4499894670452749778[120] = 0;
   out_4499894670452749778[121] = 0;
   out_4499894670452749778[122] = 0;
   out_4499894670452749778[123] = 0;
   out_4499894670452749778[124] = 0;
   out_4499894670452749778[125] = 0;
   out_4499894670452749778[126] = 0;
   out_4499894670452749778[127] = 0;
   out_4499894670452749778[128] = 0;
   out_4499894670452749778[129] = 0;
   out_4499894670452749778[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4499894670452749778[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4499894670452749778[132] = 1;
   out_4499894670452749778[133] = 0;
   out_4499894670452749778[134] = 0;
   out_4499894670452749778[135] = 0;
   out_4499894670452749778[136] = 0;
   out_4499894670452749778[137] = 0;
   out_4499894670452749778[138] = 0;
   out_4499894670452749778[139] = 0;
   out_4499894670452749778[140] = 0;
   out_4499894670452749778[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4499894670452749778[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4499894670452749778[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4499894670452749778[144] = 0;
   out_4499894670452749778[145] = 0;
   out_4499894670452749778[146] = 0;
   out_4499894670452749778[147] = 0;
   out_4499894670452749778[148] = 0;
   out_4499894670452749778[149] = 0;
   out_4499894670452749778[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4499894670452749778[151] = 0;
   out_4499894670452749778[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4499894670452749778[153] = 0;
   out_4499894670452749778[154] = 1;
   out_4499894670452749778[155] = 0;
   out_4499894670452749778[156] = 0;
   out_4499894670452749778[157] = 0;
   out_4499894670452749778[158] = 0;
   out_4499894670452749778[159] = 0;
   out_4499894670452749778[160] = 0;
   out_4499894670452749778[161] = 0;
   out_4499894670452749778[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4499894670452749778[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4499894670452749778[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4499894670452749778[165] = 0;
   out_4499894670452749778[166] = 0;
   out_4499894670452749778[167] = 0;
   out_4499894670452749778[168] = 0;
   out_4499894670452749778[169] = 0;
   out_4499894670452749778[170] = 0;
   out_4499894670452749778[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4499894670452749778[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4499894670452749778[173] = 0;
   out_4499894670452749778[174] = 0;
   out_4499894670452749778[175] = 0;
   out_4499894670452749778[176] = 1;
   out_4499894670452749778[177] = 0;
   out_4499894670452749778[178] = 0;
   out_4499894670452749778[179] = 0;
   out_4499894670452749778[180] = 0;
   out_4499894670452749778[181] = 0;
   out_4499894670452749778[182] = 0;
   out_4499894670452749778[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4499894670452749778[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4499894670452749778[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4499894670452749778[186] = 0;
   out_4499894670452749778[187] = 0;
   out_4499894670452749778[188] = 0;
   out_4499894670452749778[189] = 0;
   out_4499894670452749778[190] = 0;
   out_4499894670452749778[191] = 0;
   out_4499894670452749778[192] = 0;
   out_4499894670452749778[193] = 0;
   out_4499894670452749778[194] = 0;
   out_4499894670452749778[195] = 0;
   out_4499894670452749778[196] = 0;
   out_4499894670452749778[197] = 0;
   out_4499894670452749778[198] = 1;
   out_4499894670452749778[199] = 0;
   out_4499894670452749778[200] = 0;
   out_4499894670452749778[201] = 0;
   out_4499894670452749778[202] = 0;
   out_4499894670452749778[203] = 0;
   out_4499894670452749778[204] = 0;
   out_4499894670452749778[205] = 0;
   out_4499894670452749778[206] = 0;
   out_4499894670452749778[207] = 0;
   out_4499894670452749778[208] = 0;
   out_4499894670452749778[209] = 0;
   out_4499894670452749778[210] = 0;
   out_4499894670452749778[211] = 0;
   out_4499894670452749778[212] = 0;
   out_4499894670452749778[213] = 0;
   out_4499894670452749778[214] = 0;
   out_4499894670452749778[215] = 0;
   out_4499894670452749778[216] = 0;
   out_4499894670452749778[217] = 0;
   out_4499894670452749778[218] = 0;
   out_4499894670452749778[219] = 0;
   out_4499894670452749778[220] = 1;
   out_4499894670452749778[221] = 0;
   out_4499894670452749778[222] = 0;
   out_4499894670452749778[223] = 0;
   out_4499894670452749778[224] = 0;
   out_4499894670452749778[225] = 0;
   out_4499894670452749778[226] = 0;
   out_4499894670452749778[227] = 0;
   out_4499894670452749778[228] = 0;
   out_4499894670452749778[229] = 0;
   out_4499894670452749778[230] = 0;
   out_4499894670452749778[231] = 0;
   out_4499894670452749778[232] = 0;
   out_4499894670452749778[233] = 0;
   out_4499894670452749778[234] = 0;
   out_4499894670452749778[235] = 0;
   out_4499894670452749778[236] = 0;
   out_4499894670452749778[237] = 0;
   out_4499894670452749778[238] = 0;
   out_4499894670452749778[239] = 0;
   out_4499894670452749778[240] = 0;
   out_4499894670452749778[241] = 0;
   out_4499894670452749778[242] = 1;
   out_4499894670452749778[243] = 0;
   out_4499894670452749778[244] = 0;
   out_4499894670452749778[245] = 0;
   out_4499894670452749778[246] = 0;
   out_4499894670452749778[247] = 0;
   out_4499894670452749778[248] = 0;
   out_4499894670452749778[249] = 0;
   out_4499894670452749778[250] = 0;
   out_4499894670452749778[251] = 0;
   out_4499894670452749778[252] = 0;
   out_4499894670452749778[253] = 0;
   out_4499894670452749778[254] = 0;
   out_4499894670452749778[255] = 0;
   out_4499894670452749778[256] = 0;
   out_4499894670452749778[257] = 0;
   out_4499894670452749778[258] = 0;
   out_4499894670452749778[259] = 0;
   out_4499894670452749778[260] = 0;
   out_4499894670452749778[261] = 0;
   out_4499894670452749778[262] = 0;
   out_4499894670452749778[263] = 0;
   out_4499894670452749778[264] = 1;
   out_4499894670452749778[265] = 0;
   out_4499894670452749778[266] = 0;
   out_4499894670452749778[267] = 0;
   out_4499894670452749778[268] = 0;
   out_4499894670452749778[269] = 0;
   out_4499894670452749778[270] = 0;
   out_4499894670452749778[271] = 0;
   out_4499894670452749778[272] = 0;
   out_4499894670452749778[273] = 0;
   out_4499894670452749778[274] = 0;
   out_4499894670452749778[275] = 0;
   out_4499894670452749778[276] = 0;
   out_4499894670452749778[277] = 0;
   out_4499894670452749778[278] = 0;
   out_4499894670452749778[279] = 0;
   out_4499894670452749778[280] = 0;
   out_4499894670452749778[281] = 0;
   out_4499894670452749778[282] = 0;
   out_4499894670452749778[283] = 0;
   out_4499894670452749778[284] = 0;
   out_4499894670452749778[285] = 0;
   out_4499894670452749778[286] = 1;
   out_4499894670452749778[287] = 0;
   out_4499894670452749778[288] = 0;
   out_4499894670452749778[289] = 0;
   out_4499894670452749778[290] = 0;
   out_4499894670452749778[291] = 0;
   out_4499894670452749778[292] = 0;
   out_4499894670452749778[293] = 0;
   out_4499894670452749778[294] = 0;
   out_4499894670452749778[295] = 0;
   out_4499894670452749778[296] = 0;
   out_4499894670452749778[297] = 0;
   out_4499894670452749778[298] = 0;
   out_4499894670452749778[299] = 0;
   out_4499894670452749778[300] = 0;
   out_4499894670452749778[301] = 0;
   out_4499894670452749778[302] = 0;
   out_4499894670452749778[303] = 0;
   out_4499894670452749778[304] = 0;
   out_4499894670452749778[305] = 0;
   out_4499894670452749778[306] = 0;
   out_4499894670452749778[307] = 0;
   out_4499894670452749778[308] = 1;
   out_4499894670452749778[309] = 0;
   out_4499894670452749778[310] = 0;
   out_4499894670452749778[311] = 0;
   out_4499894670452749778[312] = 0;
   out_4499894670452749778[313] = 0;
   out_4499894670452749778[314] = 0;
   out_4499894670452749778[315] = 0;
   out_4499894670452749778[316] = 0;
   out_4499894670452749778[317] = 0;
   out_4499894670452749778[318] = 0;
   out_4499894670452749778[319] = 0;
   out_4499894670452749778[320] = 0;
   out_4499894670452749778[321] = 0;
   out_4499894670452749778[322] = 0;
   out_4499894670452749778[323] = 0;
   out_4499894670452749778[324] = 0;
   out_4499894670452749778[325] = 0;
   out_4499894670452749778[326] = 0;
   out_4499894670452749778[327] = 0;
   out_4499894670452749778[328] = 0;
   out_4499894670452749778[329] = 0;
   out_4499894670452749778[330] = 1;
   out_4499894670452749778[331] = 0;
   out_4499894670452749778[332] = 0;
   out_4499894670452749778[333] = 0;
   out_4499894670452749778[334] = 0;
   out_4499894670452749778[335] = 0;
   out_4499894670452749778[336] = 0;
   out_4499894670452749778[337] = 0;
   out_4499894670452749778[338] = 0;
   out_4499894670452749778[339] = 0;
   out_4499894670452749778[340] = 0;
   out_4499894670452749778[341] = 0;
   out_4499894670452749778[342] = 0;
   out_4499894670452749778[343] = 0;
   out_4499894670452749778[344] = 0;
   out_4499894670452749778[345] = 0;
   out_4499894670452749778[346] = 0;
   out_4499894670452749778[347] = 0;
   out_4499894670452749778[348] = 0;
   out_4499894670452749778[349] = 0;
   out_4499894670452749778[350] = 0;
   out_4499894670452749778[351] = 0;
   out_4499894670452749778[352] = 1;
   out_4499894670452749778[353] = 0;
   out_4499894670452749778[354] = 0;
   out_4499894670452749778[355] = 0;
   out_4499894670452749778[356] = 0;
   out_4499894670452749778[357] = 0;
   out_4499894670452749778[358] = 0;
   out_4499894670452749778[359] = 0;
   out_4499894670452749778[360] = 0;
   out_4499894670452749778[361] = 0;
   out_4499894670452749778[362] = 0;
   out_4499894670452749778[363] = 0;
   out_4499894670452749778[364] = 0;
   out_4499894670452749778[365] = 0;
   out_4499894670452749778[366] = 0;
   out_4499894670452749778[367] = 0;
   out_4499894670452749778[368] = 0;
   out_4499894670452749778[369] = 0;
   out_4499894670452749778[370] = 0;
   out_4499894670452749778[371] = 0;
   out_4499894670452749778[372] = 0;
   out_4499894670452749778[373] = 0;
   out_4499894670452749778[374] = 1;
   out_4499894670452749778[375] = 0;
   out_4499894670452749778[376] = 0;
   out_4499894670452749778[377] = 0;
   out_4499894670452749778[378] = 0;
   out_4499894670452749778[379] = 0;
   out_4499894670452749778[380] = 0;
   out_4499894670452749778[381] = 0;
   out_4499894670452749778[382] = 0;
   out_4499894670452749778[383] = 0;
   out_4499894670452749778[384] = 0;
   out_4499894670452749778[385] = 0;
   out_4499894670452749778[386] = 0;
   out_4499894670452749778[387] = 0;
   out_4499894670452749778[388] = 0;
   out_4499894670452749778[389] = 0;
   out_4499894670452749778[390] = 0;
   out_4499894670452749778[391] = 0;
   out_4499894670452749778[392] = 0;
   out_4499894670452749778[393] = 0;
   out_4499894670452749778[394] = 0;
   out_4499894670452749778[395] = 0;
   out_4499894670452749778[396] = 1;
   out_4499894670452749778[397] = 0;
   out_4499894670452749778[398] = 0;
   out_4499894670452749778[399] = 0;
   out_4499894670452749778[400] = 0;
   out_4499894670452749778[401] = 0;
   out_4499894670452749778[402] = 0;
   out_4499894670452749778[403] = 0;
   out_4499894670452749778[404] = 0;
   out_4499894670452749778[405] = 0;
   out_4499894670452749778[406] = 0;
   out_4499894670452749778[407] = 0;
   out_4499894670452749778[408] = 0;
   out_4499894670452749778[409] = 0;
   out_4499894670452749778[410] = 0;
   out_4499894670452749778[411] = 0;
   out_4499894670452749778[412] = 0;
   out_4499894670452749778[413] = 0;
   out_4499894670452749778[414] = 0;
   out_4499894670452749778[415] = 0;
   out_4499894670452749778[416] = 0;
   out_4499894670452749778[417] = 0;
   out_4499894670452749778[418] = 1;
   out_4499894670452749778[419] = 0;
   out_4499894670452749778[420] = 0;
   out_4499894670452749778[421] = 0;
   out_4499894670452749778[422] = 0;
   out_4499894670452749778[423] = 0;
   out_4499894670452749778[424] = 0;
   out_4499894670452749778[425] = 0;
   out_4499894670452749778[426] = 0;
   out_4499894670452749778[427] = 0;
   out_4499894670452749778[428] = 0;
   out_4499894670452749778[429] = 0;
   out_4499894670452749778[430] = 0;
   out_4499894670452749778[431] = 0;
   out_4499894670452749778[432] = 0;
   out_4499894670452749778[433] = 0;
   out_4499894670452749778[434] = 0;
   out_4499894670452749778[435] = 0;
   out_4499894670452749778[436] = 0;
   out_4499894670452749778[437] = 0;
   out_4499894670452749778[438] = 0;
   out_4499894670452749778[439] = 0;
   out_4499894670452749778[440] = 1;
}
void h_4(double *state, double *unused, double *out_4604604863588247531) {
   out_4604604863588247531[0] = state[10] + state[13];
   out_4604604863588247531[1] = state[11] + state[14];
   out_4604604863588247531[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_114973810991578600) {
   out_114973810991578600[0] = 0;
   out_114973810991578600[1] = 0;
   out_114973810991578600[2] = 0;
   out_114973810991578600[3] = 0;
   out_114973810991578600[4] = 0;
   out_114973810991578600[5] = 0;
   out_114973810991578600[6] = 0;
   out_114973810991578600[7] = 0;
   out_114973810991578600[8] = 0;
   out_114973810991578600[9] = 0;
   out_114973810991578600[10] = 1;
   out_114973810991578600[11] = 0;
   out_114973810991578600[12] = 0;
   out_114973810991578600[13] = 1;
   out_114973810991578600[14] = 0;
   out_114973810991578600[15] = 0;
   out_114973810991578600[16] = 0;
   out_114973810991578600[17] = 0;
   out_114973810991578600[18] = 0;
   out_114973810991578600[19] = 0;
   out_114973810991578600[20] = 0;
   out_114973810991578600[21] = 0;
   out_114973810991578600[22] = 0;
   out_114973810991578600[23] = 0;
   out_114973810991578600[24] = 0;
   out_114973810991578600[25] = 0;
   out_114973810991578600[26] = 0;
   out_114973810991578600[27] = 0;
   out_114973810991578600[28] = 0;
   out_114973810991578600[29] = 0;
   out_114973810991578600[30] = 0;
   out_114973810991578600[31] = 0;
   out_114973810991578600[32] = 0;
   out_114973810991578600[33] = 1;
   out_114973810991578600[34] = 0;
   out_114973810991578600[35] = 0;
   out_114973810991578600[36] = 1;
   out_114973810991578600[37] = 0;
   out_114973810991578600[38] = 0;
   out_114973810991578600[39] = 0;
   out_114973810991578600[40] = 0;
   out_114973810991578600[41] = 0;
   out_114973810991578600[42] = 0;
   out_114973810991578600[43] = 0;
   out_114973810991578600[44] = 0;
   out_114973810991578600[45] = 0;
   out_114973810991578600[46] = 0;
   out_114973810991578600[47] = 0;
   out_114973810991578600[48] = 0;
   out_114973810991578600[49] = 0;
   out_114973810991578600[50] = 0;
   out_114973810991578600[51] = 0;
   out_114973810991578600[52] = 0;
   out_114973810991578600[53] = 0;
   out_114973810991578600[54] = 0;
   out_114973810991578600[55] = 0;
   out_114973810991578600[56] = 1;
   out_114973810991578600[57] = 0;
   out_114973810991578600[58] = 0;
   out_114973810991578600[59] = 1;
   out_114973810991578600[60] = 0;
   out_114973810991578600[61] = 0;
   out_114973810991578600[62] = 0;
   out_114973810991578600[63] = 0;
   out_114973810991578600[64] = 0;
   out_114973810991578600[65] = 0;
}
void h_9(double *state, double *unused, double *out_8101610603659399212) {
   out_8101610603659399212[0] = state[10];
   out_8101610603659399212[1] = state[11];
   out_8101610603659399212[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7402192746256026070) {
   out_7402192746256026070[0] = 0;
   out_7402192746256026070[1] = 0;
   out_7402192746256026070[2] = 0;
   out_7402192746256026070[3] = 0;
   out_7402192746256026070[4] = 0;
   out_7402192746256026070[5] = 0;
   out_7402192746256026070[6] = 0;
   out_7402192746256026070[7] = 0;
   out_7402192746256026070[8] = 0;
   out_7402192746256026070[9] = 0;
   out_7402192746256026070[10] = 1;
   out_7402192746256026070[11] = 0;
   out_7402192746256026070[12] = 0;
   out_7402192746256026070[13] = 0;
   out_7402192746256026070[14] = 0;
   out_7402192746256026070[15] = 0;
   out_7402192746256026070[16] = 0;
   out_7402192746256026070[17] = 0;
   out_7402192746256026070[18] = 0;
   out_7402192746256026070[19] = 0;
   out_7402192746256026070[20] = 0;
   out_7402192746256026070[21] = 0;
   out_7402192746256026070[22] = 0;
   out_7402192746256026070[23] = 0;
   out_7402192746256026070[24] = 0;
   out_7402192746256026070[25] = 0;
   out_7402192746256026070[26] = 0;
   out_7402192746256026070[27] = 0;
   out_7402192746256026070[28] = 0;
   out_7402192746256026070[29] = 0;
   out_7402192746256026070[30] = 0;
   out_7402192746256026070[31] = 0;
   out_7402192746256026070[32] = 0;
   out_7402192746256026070[33] = 1;
   out_7402192746256026070[34] = 0;
   out_7402192746256026070[35] = 0;
   out_7402192746256026070[36] = 0;
   out_7402192746256026070[37] = 0;
   out_7402192746256026070[38] = 0;
   out_7402192746256026070[39] = 0;
   out_7402192746256026070[40] = 0;
   out_7402192746256026070[41] = 0;
   out_7402192746256026070[42] = 0;
   out_7402192746256026070[43] = 0;
   out_7402192746256026070[44] = 0;
   out_7402192746256026070[45] = 0;
   out_7402192746256026070[46] = 0;
   out_7402192746256026070[47] = 0;
   out_7402192746256026070[48] = 0;
   out_7402192746256026070[49] = 0;
   out_7402192746256026070[50] = 0;
   out_7402192746256026070[51] = 0;
   out_7402192746256026070[52] = 0;
   out_7402192746256026070[53] = 0;
   out_7402192746256026070[54] = 0;
   out_7402192746256026070[55] = 0;
   out_7402192746256026070[56] = 1;
   out_7402192746256026070[57] = 0;
   out_7402192746256026070[58] = 0;
   out_7402192746256026070[59] = 0;
   out_7402192746256026070[60] = 0;
   out_7402192746256026070[61] = 0;
   out_7402192746256026070[62] = 0;
   out_7402192746256026070[63] = 0;
   out_7402192746256026070[64] = 0;
   out_7402192746256026070[65] = 0;
}
void h_10(double *state, double *unused, double *out_7500298714671173359) {
   out_7500298714671173359[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7500298714671173359[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7500298714671173359[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5529619969388654415) {
   out_5529619969388654415[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5529619969388654415[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5529619969388654415[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5529619969388654415[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5529619969388654415[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5529619969388654415[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5529619969388654415[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5529619969388654415[7] = 0;
   out_5529619969388654415[8] = 0;
   out_5529619969388654415[9] = 0;
   out_5529619969388654415[10] = 0;
   out_5529619969388654415[11] = 0;
   out_5529619969388654415[12] = 0;
   out_5529619969388654415[13] = 0;
   out_5529619969388654415[14] = 0;
   out_5529619969388654415[15] = 0;
   out_5529619969388654415[16] = 1;
   out_5529619969388654415[17] = 0;
   out_5529619969388654415[18] = 0;
   out_5529619969388654415[19] = 1;
   out_5529619969388654415[20] = 0;
   out_5529619969388654415[21] = 0;
   out_5529619969388654415[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5529619969388654415[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5529619969388654415[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5529619969388654415[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5529619969388654415[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5529619969388654415[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5529619969388654415[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5529619969388654415[29] = 0;
   out_5529619969388654415[30] = 0;
   out_5529619969388654415[31] = 0;
   out_5529619969388654415[32] = 0;
   out_5529619969388654415[33] = 0;
   out_5529619969388654415[34] = 0;
   out_5529619969388654415[35] = 0;
   out_5529619969388654415[36] = 0;
   out_5529619969388654415[37] = 0;
   out_5529619969388654415[38] = 0;
   out_5529619969388654415[39] = 1;
   out_5529619969388654415[40] = 0;
   out_5529619969388654415[41] = 0;
   out_5529619969388654415[42] = 1;
   out_5529619969388654415[43] = 0;
   out_5529619969388654415[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5529619969388654415[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5529619969388654415[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5529619969388654415[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5529619969388654415[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5529619969388654415[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5529619969388654415[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5529619969388654415[51] = 0;
   out_5529619969388654415[52] = 0;
   out_5529619969388654415[53] = 0;
   out_5529619969388654415[54] = 0;
   out_5529619969388654415[55] = 0;
   out_5529619969388654415[56] = 0;
   out_5529619969388654415[57] = 0;
   out_5529619969388654415[58] = 0;
   out_5529619969388654415[59] = 0;
   out_5529619969388654415[60] = 0;
   out_5529619969388654415[61] = 0;
   out_5529619969388654415[62] = 1;
   out_5529619969388654415[63] = 0;
   out_5529619969388654415[64] = 0;
   out_5529619969388654415[65] = 1;
}
void h_12(double *state, double *unused, double *out_7883932706847156522) {
   out_7883932706847156522[0] = state[0];
   out_7883932706847156522[1] = state[1];
   out_7883932706847156522[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7782102124674029092) {
   out_7782102124674029092[0] = 1;
   out_7782102124674029092[1] = 0;
   out_7782102124674029092[2] = 0;
   out_7782102124674029092[3] = 0;
   out_7782102124674029092[4] = 0;
   out_7782102124674029092[5] = 0;
   out_7782102124674029092[6] = 0;
   out_7782102124674029092[7] = 0;
   out_7782102124674029092[8] = 0;
   out_7782102124674029092[9] = 0;
   out_7782102124674029092[10] = 0;
   out_7782102124674029092[11] = 0;
   out_7782102124674029092[12] = 0;
   out_7782102124674029092[13] = 0;
   out_7782102124674029092[14] = 0;
   out_7782102124674029092[15] = 0;
   out_7782102124674029092[16] = 0;
   out_7782102124674029092[17] = 0;
   out_7782102124674029092[18] = 0;
   out_7782102124674029092[19] = 0;
   out_7782102124674029092[20] = 0;
   out_7782102124674029092[21] = 0;
   out_7782102124674029092[22] = 0;
   out_7782102124674029092[23] = 1;
   out_7782102124674029092[24] = 0;
   out_7782102124674029092[25] = 0;
   out_7782102124674029092[26] = 0;
   out_7782102124674029092[27] = 0;
   out_7782102124674029092[28] = 0;
   out_7782102124674029092[29] = 0;
   out_7782102124674029092[30] = 0;
   out_7782102124674029092[31] = 0;
   out_7782102124674029092[32] = 0;
   out_7782102124674029092[33] = 0;
   out_7782102124674029092[34] = 0;
   out_7782102124674029092[35] = 0;
   out_7782102124674029092[36] = 0;
   out_7782102124674029092[37] = 0;
   out_7782102124674029092[38] = 0;
   out_7782102124674029092[39] = 0;
   out_7782102124674029092[40] = 0;
   out_7782102124674029092[41] = 0;
   out_7782102124674029092[42] = 0;
   out_7782102124674029092[43] = 0;
   out_7782102124674029092[44] = 0;
   out_7782102124674029092[45] = 0;
   out_7782102124674029092[46] = 1;
   out_7782102124674029092[47] = 0;
   out_7782102124674029092[48] = 0;
   out_7782102124674029092[49] = 0;
   out_7782102124674029092[50] = 0;
   out_7782102124674029092[51] = 0;
   out_7782102124674029092[52] = 0;
   out_7782102124674029092[53] = 0;
   out_7782102124674029092[54] = 0;
   out_7782102124674029092[55] = 0;
   out_7782102124674029092[56] = 0;
   out_7782102124674029092[57] = 0;
   out_7782102124674029092[58] = 0;
   out_7782102124674029092[59] = 0;
   out_7782102124674029092[60] = 0;
   out_7782102124674029092[61] = 0;
   out_7782102124674029092[62] = 0;
   out_7782102124674029092[63] = 0;
   out_7782102124674029092[64] = 0;
   out_7782102124674029092[65] = 0;
}
void h_35(double *state, double *unused, double *out_2476922534421005980) {
   out_2476922534421005980[0] = state[7];
   out_2476922534421005980[1] = state[8];
   out_2476922534421005980[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3481635868364185976) {
   out_3481635868364185976[0] = 0;
   out_3481635868364185976[1] = 0;
   out_3481635868364185976[2] = 0;
   out_3481635868364185976[3] = 0;
   out_3481635868364185976[4] = 0;
   out_3481635868364185976[5] = 0;
   out_3481635868364185976[6] = 0;
   out_3481635868364185976[7] = 1;
   out_3481635868364185976[8] = 0;
   out_3481635868364185976[9] = 0;
   out_3481635868364185976[10] = 0;
   out_3481635868364185976[11] = 0;
   out_3481635868364185976[12] = 0;
   out_3481635868364185976[13] = 0;
   out_3481635868364185976[14] = 0;
   out_3481635868364185976[15] = 0;
   out_3481635868364185976[16] = 0;
   out_3481635868364185976[17] = 0;
   out_3481635868364185976[18] = 0;
   out_3481635868364185976[19] = 0;
   out_3481635868364185976[20] = 0;
   out_3481635868364185976[21] = 0;
   out_3481635868364185976[22] = 0;
   out_3481635868364185976[23] = 0;
   out_3481635868364185976[24] = 0;
   out_3481635868364185976[25] = 0;
   out_3481635868364185976[26] = 0;
   out_3481635868364185976[27] = 0;
   out_3481635868364185976[28] = 0;
   out_3481635868364185976[29] = 0;
   out_3481635868364185976[30] = 1;
   out_3481635868364185976[31] = 0;
   out_3481635868364185976[32] = 0;
   out_3481635868364185976[33] = 0;
   out_3481635868364185976[34] = 0;
   out_3481635868364185976[35] = 0;
   out_3481635868364185976[36] = 0;
   out_3481635868364185976[37] = 0;
   out_3481635868364185976[38] = 0;
   out_3481635868364185976[39] = 0;
   out_3481635868364185976[40] = 0;
   out_3481635868364185976[41] = 0;
   out_3481635868364185976[42] = 0;
   out_3481635868364185976[43] = 0;
   out_3481635868364185976[44] = 0;
   out_3481635868364185976[45] = 0;
   out_3481635868364185976[46] = 0;
   out_3481635868364185976[47] = 0;
   out_3481635868364185976[48] = 0;
   out_3481635868364185976[49] = 0;
   out_3481635868364185976[50] = 0;
   out_3481635868364185976[51] = 0;
   out_3481635868364185976[52] = 0;
   out_3481635868364185976[53] = 1;
   out_3481635868364185976[54] = 0;
   out_3481635868364185976[55] = 0;
   out_3481635868364185976[56] = 0;
   out_3481635868364185976[57] = 0;
   out_3481635868364185976[58] = 0;
   out_3481635868364185976[59] = 0;
   out_3481635868364185976[60] = 0;
   out_3481635868364185976[61] = 0;
   out_3481635868364185976[62] = 0;
   out_3481635868364185976[63] = 0;
   out_3481635868364185976[64] = 0;
   out_3481635868364185976[65] = 0;
}
void h_32(double *state, double *unused, double *out_8033685408924110091) {
   out_8033685408924110091[0] = state[3];
   out_8033685408924110091[1] = state[4];
   out_8033685408924110091[2] = state[5];
   out_8033685408924110091[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1274954717417487465) {
   out_1274954717417487465[0] = 0;
   out_1274954717417487465[1] = 0;
   out_1274954717417487465[2] = 0;
   out_1274954717417487465[3] = 1;
   out_1274954717417487465[4] = 0;
   out_1274954717417487465[5] = 0;
   out_1274954717417487465[6] = 0;
   out_1274954717417487465[7] = 0;
   out_1274954717417487465[8] = 0;
   out_1274954717417487465[9] = 0;
   out_1274954717417487465[10] = 0;
   out_1274954717417487465[11] = 0;
   out_1274954717417487465[12] = 0;
   out_1274954717417487465[13] = 0;
   out_1274954717417487465[14] = 0;
   out_1274954717417487465[15] = 0;
   out_1274954717417487465[16] = 0;
   out_1274954717417487465[17] = 0;
   out_1274954717417487465[18] = 0;
   out_1274954717417487465[19] = 0;
   out_1274954717417487465[20] = 0;
   out_1274954717417487465[21] = 0;
   out_1274954717417487465[22] = 0;
   out_1274954717417487465[23] = 0;
   out_1274954717417487465[24] = 0;
   out_1274954717417487465[25] = 0;
   out_1274954717417487465[26] = 1;
   out_1274954717417487465[27] = 0;
   out_1274954717417487465[28] = 0;
   out_1274954717417487465[29] = 0;
   out_1274954717417487465[30] = 0;
   out_1274954717417487465[31] = 0;
   out_1274954717417487465[32] = 0;
   out_1274954717417487465[33] = 0;
   out_1274954717417487465[34] = 0;
   out_1274954717417487465[35] = 0;
   out_1274954717417487465[36] = 0;
   out_1274954717417487465[37] = 0;
   out_1274954717417487465[38] = 0;
   out_1274954717417487465[39] = 0;
   out_1274954717417487465[40] = 0;
   out_1274954717417487465[41] = 0;
   out_1274954717417487465[42] = 0;
   out_1274954717417487465[43] = 0;
   out_1274954717417487465[44] = 0;
   out_1274954717417487465[45] = 0;
   out_1274954717417487465[46] = 0;
   out_1274954717417487465[47] = 0;
   out_1274954717417487465[48] = 0;
   out_1274954717417487465[49] = 1;
   out_1274954717417487465[50] = 0;
   out_1274954717417487465[51] = 0;
   out_1274954717417487465[52] = 0;
   out_1274954717417487465[53] = 0;
   out_1274954717417487465[54] = 0;
   out_1274954717417487465[55] = 0;
   out_1274954717417487465[56] = 0;
   out_1274954717417487465[57] = 0;
   out_1274954717417487465[58] = 0;
   out_1274954717417487465[59] = 0;
   out_1274954717417487465[60] = 0;
   out_1274954717417487465[61] = 0;
   out_1274954717417487465[62] = 0;
   out_1274954717417487465[63] = 0;
   out_1274954717417487465[64] = 0;
   out_1274954717417487465[65] = 0;
   out_1274954717417487465[66] = 0;
   out_1274954717417487465[67] = 0;
   out_1274954717417487465[68] = 0;
   out_1274954717417487465[69] = 0;
   out_1274954717417487465[70] = 0;
   out_1274954717417487465[71] = 0;
   out_1274954717417487465[72] = 1;
   out_1274954717417487465[73] = 0;
   out_1274954717417487465[74] = 0;
   out_1274954717417487465[75] = 0;
   out_1274954717417487465[76] = 0;
   out_1274954717417487465[77] = 0;
   out_1274954717417487465[78] = 0;
   out_1274954717417487465[79] = 0;
   out_1274954717417487465[80] = 0;
   out_1274954717417487465[81] = 0;
   out_1274954717417487465[82] = 0;
   out_1274954717417487465[83] = 0;
   out_1274954717417487465[84] = 0;
   out_1274954717417487465[85] = 0;
   out_1274954717417487465[86] = 0;
   out_1274954717417487465[87] = 0;
}
void h_13(double *state, double *unused, double *out_2733429127899236325) {
   out_2733429127899236325[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2733429127899236325[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2733429127899236325[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8800477026258217201) {
   out_8800477026258217201[0] = 0;
   out_8800477026258217201[1] = 0;
   out_8800477026258217201[2] = 0;
   out_8800477026258217201[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8800477026258217201[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8800477026258217201[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8800477026258217201[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8800477026258217201[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8800477026258217201[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8800477026258217201[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8800477026258217201[10] = 0;
   out_8800477026258217201[11] = 0;
   out_8800477026258217201[12] = 0;
   out_8800477026258217201[13] = 0;
   out_8800477026258217201[14] = 0;
   out_8800477026258217201[15] = 0;
   out_8800477026258217201[16] = 0;
   out_8800477026258217201[17] = 0;
   out_8800477026258217201[18] = 0;
   out_8800477026258217201[19] = 0;
   out_8800477026258217201[20] = 0;
   out_8800477026258217201[21] = 0;
   out_8800477026258217201[22] = 0;
   out_8800477026258217201[23] = 0;
   out_8800477026258217201[24] = 0;
   out_8800477026258217201[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8800477026258217201[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8800477026258217201[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8800477026258217201[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8800477026258217201[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8800477026258217201[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8800477026258217201[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8800477026258217201[32] = 0;
   out_8800477026258217201[33] = 0;
   out_8800477026258217201[34] = 0;
   out_8800477026258217201[35] = 0;
   out_8800477026258217201[36] = 0;
   out_8800477026258217201[37] = 0;
   out_8800477026258217201[38] = 0;
   out_8800477026258217201[39] = 0;
   out_8800477026258217201[40] = 0;
   out_8800477026258217201[41] = 0;
   out_8800477026258217201[42] = 0;
   out_8800477026258217201[43] = 0;
   out_8800477026258217201[44] = 0;
   out_8800477026258217201[45] = 0;
   out_8800477026258217201[46] = 0;
   out_8800477026258217201[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8800477026258217201[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8800477026258217201[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8800477026258217201[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8800477026258217201[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8800477026258217201[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8800477026258217201[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8800477026258217201[54] = 0;
   out_8800477026258217201[55] = 0;
   out_8800477026258217201[56] = 0;
   out_8800477026258217201[57] = 0;
   out_8800477026258217201[58] = 0;
   out_8800477026258217201[59] = 0;
   out_8800477026258217201[60] = 0;
   out_8800477026258217201[61] = 0;
   out_8800477026258217201[62] = 0;
   out_8800477026258217201[63] = 0;
   out_8800477026258217201[64] = 0;
   out_8800477026258217201[65] = 0;
}
void h_14(double *state, double *unused, double *out_8101610603659399212) {
   out_8101610603659399212[0] = state[10];
   out_8101610603659399212[1] = state[11];
   out_8101610603659399212[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7402192746256026070) {
   out_7402192746256026070[0] = 0;
   out_7402192746256026070[1] = 0;
   out_7402192746256026070[2] = 0;
   out_7402192746256026070[3] = 0;
   out_7402192746256026070[4] = 0;
   out_7402192746256026070[5] = 0;
   out_7402192746256026070[6] = 0;
   out_7402192746256026070[7] = 0;
   out_7402192746256026070[8] = 0;
   out_7402192746256026070[9] = 0;
   out_7402192746256026070[10] = 1;
   out_7402192746256026070[11] = 0;
   out_7402192746256026070[12] = 0;
   out_7402192746256026070[13] = 0;
   out_7402192746256026070[14] = 0;
   out_7402192746256026070[15] = 0;
   out_7402192746256026070[16] = 0;
   out_7402192746256026070[17] = 0;
   out_7402192746256026070[18] = 0;
   out_7402192746256026070[19] = 0;
   out_7402192746256026070[20] = 0;
   out_7402192746256026070[21] = 0;
   out_7402192746256026070[22] = 0;
   out_7402192746256026070[23] = 0;
   out_7402192746256026070[24] = 0;
   out_7402192746256026070[25] = 0;
   out_7402192746256026070[26] = 0;
   out_7402192746256026070[27] = 0;
   out_7402192746256026070[28] = 0;
   out_7402192746256026070[29] = 0;
   out_7402192746256026070[30] = 0;
   out_7402192746256026070[31] = 0;
   out_7402192746256026070[32] = 0;
   out_7402192746256026070[33] = 1;
   out_7402192746256026070[34] = 0;
   out_7402192746256026070[35] = 0;
   out_7402192746256026070[36] = 0;
   out_7402192746256026070[37] = 0;
   out_7402192746256026070[38] = 0;
   out_7402192746256026070[39] = 0;
   out_7402192746256026070[40] = 0;
   out_7402192746256026070[41] = 0;
   out_7402192746256026070[42] = 0;
   out_7402192746256026070[43] = 0;
   out_7402192746256026070[44] = 0;
   out_7402192746256026070[45] = 0;
   out_7402192746256026070[46] = 0;
   out_7402192746256026070[47] = 0;
   out_7402192746256026070[48] = 0;
   out_7402192746256026070[49] = 0;
   out_7402192746256026070[50] = 0;
   out_7402192746256026070[51] = 0;
   out_7402192746256026070[52] = 0;
   out_7402192746256026070[53] = 0;
   out_7402192746256026070[54] = 0;
   out_7402192746256026070[55] = 0;
   out_7402192746256026070[56] = 1;
   out_7402192746256026070[57] = 0;
   out_7402192746256026070[58] = 0;
   out_7402192746256026070[59] = 0;
   out_7402192746256026070[60] = 0;
   out_7402192746256026070[61] = 0;
   out_7402192746256026070[62] = 0;
   out_7402192746256026070[63] = 0;
   out_7402192746256026070[64] = 0;
   out_7402192746256026070[65] = 0;
}
void h_33(double *state, double *unused, double *out_3077222103019414324) {
   out_3077222103019414324[0] = state[16];
   out_3077222103019414324[1] = state[17];
   out_3077222103019414324[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6632192873003043580) {
   out_6632192873003043580[0] = 0;
   out_6632192873003043580[1] = 0;
   out_6632192873003043580[2] = 0;
   out_6632192873003043580[3] = 0;
   out_6632192873003043580[4] = 0;
   out_6632192873003043580[5] = 0;
   out_6632192873003043580[6] = 0;
   out_6632192873003043580[7] = 0;
   out_6632192873003043580[8] = 0;
   out_6632192873003043580[9] = 0;
   out_6632192873003043580[10] = 0;
   out_6632192873003043580[11] = 0;
   out_6632192873003043580[12] = 0;
   out_6632192873003043580[13] = 0;
   out_6632192873003043580[14] = 0;
   out_6632192873003043580[15] = 0;
   out_6632192873003043580[16] = 1;
   out_6632192873003043580[17] = 0;
   out_6632192873003043580[18] = 0;
   out_6632192873003043580[19] = 0;
   out_6632192873003043580[20] = 0;
   out_6632192873003043580[21] = 0;
   out_6632192873003043580[22] = 0;
   out_6632192873003043580[23] = 0;
   out_6632192873003043580[24] = 0;
   out_6632192873003043580[25] = 0;
   out_6632192873003043580[26] = 0;
   out_6632192873003043580[27] = 0;
   out_6632192873003043580[28] = 0;
   out_6632192873003043580[29] = 0;
   out_6632192873003043580[30] = 0;
   out_6632192873003043580[31] = 0;
   out_6632192873003043580[32] = 0;
   out_6632192873003043580[33] = 0;
   out_6632192873003043580[34] = 0;
   out_6632192873003043580[35] = 0;
   out_6632192873003043580[36] = 0;
   out_6632192873003043580[37] = 0;
   out_6632192873003043580[38] = 0;
   out_6632192873003043580[39] = 1;
   out_6632192873003043580[40] = 0;
   out_6632192873003043580[41] = 0;
   out_6632192873003043580[42] = 0;
   out_6632192873003043580[43] = 0;
   out_6632192873003043580[44] = 0;
   out_6632192873003043580[45] = 0;
   out_6632192873003043580[46] = 0;
   out_6632192873003043580[47] = 0;
   out_6632192873003043580[48] = 0;
   out_6632192873003043580[49] = 0;
   out_6632192873003043580[50] = 0;
   out_6632192873003043580[51] = 0;
   out_6632192873003043580[52] = 0;
   out_6632192873003043580[53] = 0;
   out_6632192873003043580[54] = 0;
   out_6632192873003043580[55] = 0;
   out_6632192873003043580[56] = 0;
   out_6632192873003043580[57] = 0;
   out_6632192873003043580[58] = 0;
   out_6632192873003043580[59] = 0;
   out_6632192873003043580[60] = 0;
   out_6632192873003043580[61] = 0;
   out_6632192873003043580[62] = 1;
   out_6632192873003043580[63] = 0;
   out_6632192873003043580[64] = 0;
   out_6632192873003043580[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_631819449712510397) {
  H(in_vec, out_631819449712510397);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3878424390323155735) {
  err_fun(nom_x, delta_x, out_3878424390323155735);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4179741375102109110) {
  inv_err_fun(nom_x, true_x, out_4179741375102109110);
}
void live_H_mod_fun(double *state, double *out_3391345618074547058) {
  H_mod_fun(state, out_3391345618074547058);
}
void live_f_fun(double *state, double dt, double *out_6911575211779932527) {
  f_fun(state,  dt, out_6911575211779932527);
}
void live_F_fun(double *state, double dt, double *out_4499894670452749778) {
  F_fun(state,  dt, out_4499894670452749778);
}
void live_h_4(double *state, double *unused, double *out_4604604863588247531) {
  h_4(state, unused, out_4604604863588247531);
}
void live_H_4(double *state, double *unused, double *out_114973810991578600) {
  H_4(state, unused, out_114973810991578600);
}
void live_h_9(double *state, double *unused, double *out_8101610603659399212) {
  h_9(state, unused, out_8101610603659399212);
}
void live_H_9(double *state, double *unused, double *out_7402192746256026070) {
  H_9(state, unused, out_7402192746256026070);
}
void live_h_10(double *state, double *unused, double *out_7500298714671173359) {
  h_10(state, unused, out_7500298714671173359);
}
void live_H_10(double *state, double *unused, double *out_5529619969388654415) {
  H_10(state, unused, out_5529619969388654415);
}
void live_h_12(double *state, double *unused, double *out_7883932706847156522) {
  h_12(state, unused, out_7883932706847156522);
}
void live_H_12(double *state, double *unused, double *out_7782102124674029092) {
  H_12(state, unused, out_7782102124674029092);
}
void live_h_35(double *state, double *unused, double *out_2476922534421005980) {
  h_35(state, unused, out_2476922534421005980);
}
void live_H_35(double *state, double *unused, double *out_3481635868364185976) {
  H_35(state, unused, out_3481635868364185976);
}
void live_h_32(double *state, double *unused, double *out_8033685408924110091) {
  h_32(state, unused, out_8033685408924110091);
}
void live_H_32(double *state, double *unused, double *out_1274954717417487465) {
  H_32(state, unused, out_1274954717417487465);
}
void live_h_13(double *state, double *unused, double *out_2733429127899236325) {
  h_13(state, unused, out_2733429127899236325);
}
void live_H_13(double *state, double *unused, double *out_8800477026258217201) {
  H_13(state, unused, out_8800477026258217201);
}
void live_h_14(double *state, double *unused, double *out_8101610603659399212) {
  h_14(state, unused, out_8101610603659399212);
}
void live_H_14(double *state, double *unused, double *out_7402192746256026070) {
  H_14(state, unused, out_7402192746256026070);
}
void live_h_33(double *state, double *unused, double *out_3077222103019414324) {
  h_33(state, unused, out_3077222103019414324);
}
void live_H_33(double *state, double *unused, double *out_6632192873003043580) {
  H_33(state, unused, out_6632192873003043580);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
